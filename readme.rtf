{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww17440\viewh11620\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #READ ME - RasPi Time Course Imaging Instructions\
\
#Follow the instructions below to make a simple code that will take an image at specified time intervals and save that image with a timestamp. \
\
\
####Script for taking an image and saving with a timestamp####\
\
#Place the script below and save this as a text file in the directory /home/pi/PICTURE_SCRIPT.txt\
#!/bin/bash\
DATE=$(date +%Y-%m-%d_%H%M)\
raspistill-o /home/pi/Pictures/$DATE.jpg\
\
#You need to tell your raspberry pi that the text file is a script that can be executed. To do this, in the command line, type:\
sudo chmod +x /home/pi/PICTURE_SCRIPT.txt\
\
#Test the script by typing \
sh /home/pi/PICTURE_SCRIPT.txt \
\
#The script should execute without any errors and save an image if it has been typed correctly and made executable. \
\
\
\
\
####Instructions for setting up a cronjob that will execute the script above at intervals you can specify####\
\
In the command line, type \'93crontab -e\'94 and open a nano editor in order to bring up a simple cronjob timing editor. Cronjobs function by having you specify the timing interval (for example, \'93every 15th minute\'94), and executing a command you specify. Cronjobs are notorious for small mistakes/typos leading to a script failing to execute. This is no fun for anyone! I recommend using the website crontab guru to reduce the possibility that you\'92ll be grumpy!!\
\
minute/hour/day(month)/month/day(week)\
* * * * *\
Below is the script I use to take an image every 15 minutes. You can play around crontab guru to making a timing interval of your choice. \
\
*/15 * * * * sh /home/pi/PICTURE_SCRIPT.txt }